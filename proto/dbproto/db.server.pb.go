// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db.server.proto

/*
Package dbproto is a generated protocol buffer package.

It is generated from these files:
	db.server.proto

It has these top-level messages:
	ErrorInfo
	OneField
	RunSql
	QuerySql
	RunSqlResponse
	OneRow
	QuerySqlResponse
	BatchSqlList
	BatchSqlListResponse
*/
package dbproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqMsgID int32

const (
	ReqMsgID_RunSql_CMD       ReqMsgID = 11
	ReqMsgID_QuerySql_CMD     ReqMsgID = 22
	ReqMsgID_BatchSqlList_CMD ReqMsgID = 33
)

var ReqMsgID_name = map[int32]string{
	11: "RunSql_CMD",
	22: "QuerySql_CMD",
	33: "BatchSqlList_CMD",
}
var ReqMsgID_value = map[string]int32{
	"RunSql_CMD":       11,
	"QuerySql_CMD":     22,
	"BatchSqlList_CMD": 33,
}

func (x ReqMsgID) Enum() *ReqMsgID {
	p := new(ReqMsgID)
	*p = x
	return p
}
func (x ReqMsgID) String() string {
	return proto.EnumName(ReqMsgID_name, int32(x))
}
func (x *ReqMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReqMsgID_value, data, "ReqMsgID")
	if err != nil {
		return err
	}
	*x = ReqMsgID(value)
	return nil
}
func (ReqMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResMsgID int32

const (
	ResMsgID_RunSqlResponse_CMD       ResMsgID = 11
	ResMsgID_QuerySqlResponse_CMD     ResMsgID = 22
	ResMsgID_BatchSqlListResponse_CMD ResMsgID = 33
)

var ResMsgID_name = map[int32]string{
	11: "RunSqlResponse_CMD",
	22: "QuerySqlResponse_CMD",
	33: "BatchSqlListResponse_CMD",
}
var ResMsgID_value = map[string]int32{
	"RunSqlResponse_CMD":       11,
	"QuerySqlResponse_CMD":     22,
	"BatchSqlListResponse_CMD": 33,
}

func (x ResMsgID) Enum() *ResMsgID {
	p := new(ResMsgID)
	*p = x
	return p
}
func (x ResMsgID) String() string {
	return proto.EnumName(ResMsgID_name, int32(x))
}
func (x *ResMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResMsgID_value, data, "ResMsgID")
	if err != nil {
		return err
	}
	*x = ResMsgID(value)
	return nil
}
func (ResMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ErrorInfo struct {
	Code             *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ErrorInfo) Reset()                    { *m = ErrorInfo{} }
func (m *ErrorInfo) String() string            { return proto.CompactTextString(m) }
func (*ErrorInfo) ProtoMessage()               {}
func (*ErrorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ErrorInfo) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ErrorInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type OneField struct {
	Value            []byte `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OneField) Reset()                    { *m = OneField{} }
func (m *OneField) String() string            { return proto.CompactTextString(m) }
func (*OneField) ProtoMessage()               {}
func (*OneField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OneField) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RunSql struct {
	OpId             *string     `protobuf:"bytes,1,req,name=op_id,json=opId" json:"op_id,omitempty"`
	Xml              *string     `protobuf:"bytes,2,req,name=xml" json:"xml,omitempty"`
	Params           []*OneField `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	NeedInsertId     *int32      `protobuf:"varint,4,opt,name=needInsertId" json:"needInsertId,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *RunSql) Reset()                    { *m = RunSql{} }
func (m *RunSql) String() string            { return proto.CompactTextString(m) }
func (*RunSql) ProtoMessage()               {}
func (*RunSql) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RunSql) GetOpId() string {
	if m != nil && m.OpId != nil {
		return *m.OpId
	}
	return ""
}

func (m *RunSql) GetXml() string {
	if m != nil && m.Xml != nil {
		return *m.Xml
	}
	return ""
}

func (m *RunSql) GetParams() []*OneField {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *RunSql) GetNeedInsertId() int32 {
	if m != nil && m.NeedInsertId != nil {
		return *m.NeedInsertId
	}
	return 0
}

type QuerySql struct {
	OpId             *string     `protobuf:"bytes,1,req,name=op_id,json=opId" json:"op_id,omitempty"`
	Xml              *string     `protobuf:"bytes,2,req,name=xml" json:"xml,omitempty"`
	Params           []*OneField `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *QuerySql) Reset()                    { *m = QuerySql{} }
func (m *QuerySql) String() string            { return proto.CompactTextString(m) }
func (*QuerySql) ProtoMessage()               {}
func (*QuerySql) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QuerySql) GetOpId() string {
	if m != nil && m.OpId != nil {
		return *m.OpId
	}
	return ""
}

func (m *QuerySql) GetXml() string {
	if m != nil && m.Xml != nil {
		return *m.Xml
	}
	return ""
}

func (m *QuerySql) GetParams() []*OneField {
	if m != nil {
		return m.Params
	}
	return nil
}

type RunSqlResponse struct {
	OpId             *string    `protobuf:"bytes,1,req,name=op_id,json=opId" json:"op_id,omitempty"`
	Error            *ErrorInfo `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	LastInsertId     *int64     `protobuf:"varint,3,opt,name=lastInsertId" json:"lastInsertId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RunSqlResponse) Reset()                    { *m = RunSqlResponse{} }
func (m *RunSqlResponse) String() string            { return proto.CompactTextString(m) }
func (*RunSqlResponse) ProtoMessage()               {}
func (*RunSqlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RunSqlResponse) GetOpId() string {
	if m != nil && m.OpId != nil {
		return *m.OpId
	}
	return ""
}

func (m *RunSqlResponse) GetError() *ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RunSqlResponse) GetLastInsertId() int64 {
	if m != nil && m.LastInsertId != nil {
		return *m.LastInsertId
	}
	return 0
}

type OneRow struct {
	OneField         []*OneField `protobuf:"bytes,1,rep,name=OneField" json:"OneField,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *OneRow) Reset()                    { *m = OneRow{} }
func (m *OneRow) String() string            { return proto.CompactTextString(m) }
func (*OneRow) ProtoMessage()               {}
func (*OneRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OneRow) GetOneField() []*OneField {
	if m != nil {
		return m.OneField
	}
	return nil
}

type QuerySqlResponse struct {
	OpId             *string    `protobuf:"bytes,1,req,name=op_id,json=opId" json:"op_id,omitempty"`
	Error            *ErrorInfo `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Rows             []*OneRow  `protobuf:"bytes,3,rep,name=rows" json:"rows,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *QuerySqlResponse) Reset()                    { *m = QuerySqlResponse{} }
func (m *QuerySqlResponse) String() string            { return proto.CompactTextString(m) }
func (*QuerySqlResponse) ProtoMessage()               {}
func (*QuerySqlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QuerySqlResponse) GetOpId() string {
	if m != nil && m.OpId != nil {
		return *m.OpId
	}
	return ""
}

func (m *QuerySqlResponse) GetError() *ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *QuerySqlResponse) GetRows() []*OneRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

type BatchSqlList struct {
	OpId             *string                `protobuf:"bytes,1,req,name=op_id,json=opId" json:"op_id,omitempty"`
	Sql              []*BatchSqlList_OneSql `protobuf:"bytes,2,rep,name=sql" json:"sql,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *BatchSqlList) Reset()                    { *m = BatchSqlList{} }
func (m *BatchSqlList) String() string            { return proto.CompactTextString(m) }
func (*BatchSqlList) ProtoMessage()               {}
func (*BatchSqlList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BatchSqlList) GetOpId() string {
	if m != nil && m.OpId != nil {
		return *m.OpId
	}
	return ""
}

func (m *BatchSqlList) GetSql() []*BatchSqlList_OneSql {
	if m != nil {
		return m.Sql
	}
	return nil
}

type BatchSqlList_OneSql struct {
	SqlId            *string     `protobuf:"bytes,1,req,name=sql_id,json=sqlId" json:"sql_id,omitempty"`
	Xml              *string     `protobuf:"bytes,2,req,name=xml" json:"xml,omitempty"`
	Params           []*OneField `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	IsQuery          *bool       `protobuf:"varint,4,req,name=is_query,json=isQuery" json:"is_query,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *BatchSqlList_OneSql) Reset()                    { *m = BatchSqlList_OneSql{} }
func (m *BatchSqlList_OneSql) String() string            { return proto.CompactTextString(m) }
func (*BatchSqlList_OneSql) ProtoMessage()               {}
func (*BatchSqlList_OneSql) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *BatchSqlList_OneSql) GetSqlId() string {
	if m != nil && m.SqlId != nil {
		return *m.SqlId
	}
	return ""
}

func (m *BatchSqlList_OneSql) GetXml() string {
	if m != nil && m.Xml != nil {
		return *m.Xml
	}
	return ""
}

func (m *BatchSqlList_OneSql) GetParams() []*OneField {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *BatchSqlList_OneSql) GetIsQuery() bool {
	if m != nil && m.IsQuery != nil {
		return *m.IsQuery
	}
	return false
}

type BatchSqlListResponse struct {
	OpId             *string                              `protobuf:"bytes,1,req,name=op_id,json=opId" json:"op_id,omitempty"`
	Result           []*BatchSqlListResponse_OneSqlResult `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *BatchSqlListResponse) Reset()                    { *m = BatchSqlListResponse{} }
func (m *BatchSqlListResponse) String() string            { return proto.CompactTextString(m) }
func (*BatchSqlListResponse) ProtoMessage()               {}
func (*BatchSqlListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BatchSqlListResponse) GetOpId() string {
	if m != nil && m.OpId != nil {
		return *m.OpId
	}
	return ""
}

func (m *BatchSqlListResponse) GetResult() []*BatchSqlListResponse_OneSqlResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type BatchSqlListResponse_OneSqlResult struct {
	SqlId            *string    `protobuf:"bytes,1,req,name=sql_id,json=sqlId" json:"sql_id,omitempty"`
	Rows             []*OneRow  `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
	Error            *ErrorInfo `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *BatchSqlListResponse_OneSqlResult) Reset()         { *m = BatchSqlListResponse_OneSqlResult{} }
func (m *BatchSqlListResponse_OneSqlResult) String() string { return proto.CompactTextString(m) }
func (*BatchSqlListResponse_OneSqlResult) ProtoMessage()    {}
func (*BatchSqlListResponse_OneSqlResult) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

func (m *BatchSqlListResponse_OneSqlResult) GetSqlId() string {
	if m != nil && m.SqlId != nil {
		return *m.SqlId
	}
	return ""
}

func (m *BatchSqlListResponse_OneSqlResult) GetRows() []*OneRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *BatchSqlListResponse_OneSqlResult) GetError() *ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*ErrorInfo)(nil), "dbproto.ErrorInfo")
	proto.RegisterType((*OneField)(nil), "dbproto.OneField")
	proto.RegisterType((*RunSql)(nil), "dbproto.RunSql")
	proto.RegisterType((*QuerySql)(nil), "dbproto.QuerySql")
	proto.RegisterType((*RunSqlResponse)(nil), "dbproto.RunSqlResponse")
	proto.RegisterType((*OneRow)(nil), "dbproto.OneRow")
	proto.RegisterType((*QuerySqlResponse)(nil), "dbproto.QuerySqlResponse")
	proto.RegisterType((*BatchSqlList)(nil), "dbproto.BatchSqlList")
	proto.RegisterType((*BatchSqlList_OneSql)(nil), "dbproto.BatchSqlList.OneSql")
	proto.RegisterType((*BatchSqlListResponse)(nil), "dbproto.BatchSqlListResponse")
	proto.RegisterType((*BatchSqlListResponse_OneSqlResult)(nil), "dbproto.BatchSqlListResponse.OneSqlResult")
	proto.RegisterEnum("dbproto.ReqMsgID", ReqMsgID_name, ReqMsgID_value)
	proto.RegisterEnum("dbproto.ResMsgID", ResMsgID_name, ResMsgID_value)
}

func init() { proto.RegisterFile("db.server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0x8f, 0x38, 0x13, 0xab, 0x35, 0x4b, 0xa8, 0x96, 0xaa, 0x07, 0xb3, 0x5c, 0x4c,
	0x24, 0x7c, 0xe8, 0x05, 0x71, 0x0d, 0x05, 0xc9, 0x12, 0x55, 0xc5, 0xf6, 0x86, 0x90, 0x22, 0xb7,
	0x5e, 0x8a, 0x25, 0xc7, 0x6b, 0xef, 0x3a, 0x09, 0x5c, 0xf8, 0x85, 0xfc, 0x0d, 0xfe, 0x07, 0xda,
	0xf5, 0x47, 0x1c, 0x94, 0x96, 0x03, 0x70, 0x9b, 0x1d, 0xcf, 0xbc, 0x99, 0xf7, 0xde, 0x18, 0x8e,
	0xd3, 0x9b, 0x48, 0x32, 0xb1, 0x61, 0x22, 0x2a, 0x05, 0xaf, 0x39, 0x1a, 0xa7, 0x37, 0x3a, 0x20,
	0xaf, 0x61, 0xf2, 0x56, 0x08, 0x2e, 0xe2, 0xe2, 0x33, 0x47, 0x08, 0xac, 0x5b, 0x9e, 0x32, 0x6c,
	0x04, 0xa3, 0xd0, 0xa6, 0x3a, 0x46, 0x18, 0xc6, 0x2b, 0x26, 0x65, 0x72, 0xc7, 0xf0, 0x28, 0x30,
	0xc2, 0x09, 0xed, 0x9e, 0x24, 0x00, 0xf7, 0xaa, 0x60, 0xef, 0x32, 0x96, 0xa7, 0x68, 0x06, 0xf6,
	0x26, 0xc9, 0xd7, 0xaa, 0xd5, 0x08, 0x3d, 0xda, 0x3c, 0xc8, 0x77, 0x70, 0xe8, 0xba, 0xb8, 0xae,
	0x72, 0xf4, 0x18, 0x6c, 0x5e, 0x2e, 0xb3, 0x54, 0x43, 0x4f, 0xa8, 0xc5, 0xcb, 0x38, 0x45, 0x3e,
	0x98, 0x5f, 0x57, 0x39, 0x1e, 0xe9, 0x94, 0x0a, 0xd1, 0x0b, 0x70, 0xca, 0x44, 0x24, 0x2b, 0x89,
	0xcd, 0xc0, 0x0c, 0xa7, 0xe7, 0x8f, 0xa2, 0x76, 0xcf, 0xa8, 0x9b, 0x44, 0xdb, 0x02, 0x44, 0xc0,
	0x2b, 0x18, 0x4b, 0xe3, 0x42, 0x32, 0x51, 0xc7, 0x29, 0xb6, 0x02, 0x23, 0xb4, 0xe9, 0x5e, 0x8e,
	0x7c, 0x02, 0xf7, 0xc3, 0x9a, 0x89, 0x6f, 0xff, 0x65, 0x03, 0x22, 0xe1, 0xa8, 0x61, 0x47, 0x99,
	0x2c, 0x79, 0x21, 0xd9, 0xe1, 0x19, 0x21, 0xd8, 0x4c, 0x29, 0xac, 0xe5, 0x9b, 0x9e, 0xa3, 0x1e,
	0xb0, 0xd7, 0x9d, 0x36, 0x05, 0x8a, 0x52, 0x9e, 0xc8, 0xba, 0xa7, 0x64, 0x06, 0x46, 0x68, 0xd2,
	0xbd, 0x1c, 0x79, 0x05, 0xce, 0x55, 0xc1, 0x28, 0xdf, 0xa2, 0x97, 0x3b, 0xf9, 0xb1, 0x71, 0xdf,
	0xae, 0x7d, 0x09, 0xd9, 0x80, 0xdf, 0x69, 0xf1, 0xaf, 0xf6, 0x7d, 0x0e, 0x96, 0xe0, 0xdb, 0x4e,
	0xa9, 0xe3, 0xe1, 0x74, 0xca, 0xb7, 0x54, 0x7f, 0x24, 0x3f, 0x0c, 0xf0, 0x16, 0x49, 0x7d, 0xfb,
	0xe5, 0xba, 0xca, 0xdf, 0x67, 0xb2, 0x3e, 0x3c, 0x34, 0x02, 0x53, 0x56, 0xca, 0x08, 0x85, 0x74,
	0xd6, 0x23, 0x0d, 0x1b, 0x15, 0xac, 0x5a, 0x5e, 0x15, 0x9e, 0x6e, 0xb5, 0x0c, 0xca, 0xd7, 0x27,
	0xe0, 0xc8, 0x2a, 0xdf, 0xe1, 0xd9, 0xb2, 0xca, 0xff, 0xf6, 0xb6, 0x9e, 0x82, 0x9b, 0xc9, 0x65,
	0xa5, 0xe4, 0xc2, 0x56, 0x30, 0x0a, 0x5d, 0x3a, 0xce, 0xa4, 0x56, 0x8f, 0xfc, 0x34, 0x60, 0x36,
	0xdc, 0xea, 0x61, 0x2d, 0x17, 0xe0, 0x08, 0x26, 0xd7, 0x79, 0xdd, 0x32, 0x9b, 0x1f, 0x64, 0xd6,
	0x61, 0x74, 0x0c, 0x75, 0x07, 0x6d, 0x3b, 0x4f, 0x6b, 0xf0, 0x86, 0xf9, 0xfb, 0x08, 0x77, 0x66,
	0x8c, 0x1e, 0x30, 0x63, 0xe7, 0xad, 0xf9, 0x07, 0x6f, 0xe7, 0x0b, 0x70, 0x29, 0xab, 0x2e, 0xe5,
	0x5d, 0x7c, 0x81, 0x8e, 0x00, 0x9a, 0x43, 0x5f, 0xbe, 0xb9, 0xbc, 0xf0, 0xa7, 0xc8, 0x07, 0xaf,
	0x3b, 0x25, 0x9d, 0x39, 0x41, 0x33, 0xf0, 0x87, 0x84, 0x74, 0xf6, 0xd9, 0xfc, 0xa3, 0xc2, 0x90,
	0x0d, 0xc6, 0x09, 0xa0, 0xfd, 0x9f, 0xa5, 0xc5, 0xc2, 0x30, 0xfb, 0xfd, 0x2c, 0x5b, 0xcc, 0x33,
	0xc0, 0x87, 0x44, 0x6a, 0xb0, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x68, 0xc8, 0xc7, 0xd2,
	0x04, 0x00, 0x00,
}
